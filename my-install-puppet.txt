{
 "AWSTemplateFormatVersion" : "2010-09-09",

 "Description": "Sample template to bring up Puppet Master instance that can be used to bootstrap and manage Puppet Clients. The Puppet Master is populated from an embedded template that defines the set of applications to load. **WARNING** This template creates one or more Amazon EC2 instances.You will be billed for the AWS resources used if you create a stack from this template. for me yes",
 "Parameters" : {
   "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : [ "t1.micro", "t2.micro", "t2.small", "t2.medium", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge",
"m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge",
"c3.4xlarge", "c3.8xlarge", "g2.2xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge",
"i2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
   "KeyName" : {
     "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the PuppetMaster",
     "Type" : "AWS::EC2::KeyPair::KeyName"
   },
   "AppName" : {
      "Default" : "app",
      "Type" : "String",
      "Description" : "Name tag for resources"
    },
	 "Environment" : {
      "Default" : "production",
	  "AllowedValues" : ["production", "uat"],
      "Type" : "String",
      "Description" : "Environment of the node"
    },
   "DNSZoneName" : {
      "Default" : "mykezy.com",
      "Type" : "String",
      "Description" : "Name tag for resources"
    },
   "EC2SecurityGroupName": {
     "Default": "default",
     "Description" : "The EC2 security group that contains instances that need access to the database",
     "Type": "AWS::EC2::SecurityGroup::GroupName"
   },
 "PuppetMasterDNSName": {
    "Description" : "The PuppetMaster DNS name",
    "Type": "String",
	"Default": "puppet.mykezy.com"
   }

 },

 "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "PV64"   },
      "t2.micro"    : { "Arch" : "HVM64"  },
      "t2.small"    : { "Arch" : "HVM64"  },
      "t2.medium"   : { "Arch" : "HVM64"  },
      "m1.small"    : { "Arch" : "PV64"   },
      "m1.medium"   : { "Arch" : "PV64"   },
      "m1.large"    : { "Arch" : "PV64"   },
      "m1.xlarge"   : { "Arch" : "PV64"   },
      "m2.xlarge"   : { "Arch" : "PV64"   },
      "m2.2xlarge"  : { "Arch" : "PV64"   },
      "m2.4xlarge"  : { "Arch" : "PV64"   },
      "m3.medium"   : { "Arch" : "HVM64"  },
      "m3.large"    : { "Arch" : "HVM64"  },
      "m3.xlarge"   : { "Arch" : "HVM64"  },
      "m3.2xlarge"  : { "Arch" : "HVM64"  },
      "c1.medium"   : { "Arch" : "PV64"   },
      "c1.xlarge"   : { "Arch" : "PV64"   },
      "c3.large"    : { "Arch" : "HVM64"  },
      "c3.xlarge"   : { "Arch" : "HVM64"  },
      "c3.2xlarge"  : { "Arch" : "HVM64"  },
      "c3.4xlarge"  : { "Arch" : "HVM64"  },
      "c3.8xlarge"  : { "Arch" : "HVM64"  },
      "g2.2xlarge"  : { "Arch" : "HVMG2"  },
      "r3.large"    : { "Arch" : "HVM64"  },
      "r3.xlarge"   : { "Arch" : "HVM64"  },
      "r3.2xlarge"  : { "Arch" : "HVM64"  },
      "r3.4xlarge"  : { "Arch" : "HVM64"  },
      "r3.8xlarge"  : { "Arch" : "HVM64"  },
      "i2.xlarge"   : { "Arch" : "HVM64"  },
      "i2.2xlarge"  : { "Arch" : "HVM64"  },
      "i2.4xlarge"  : { "Arch" : "HVM64"  },
      "i2.8xlarge"  : { "Arch" : "HVM64"  },
      "hi1.4xlarge" : { "Arch" : "HVM64"  },
      "hs1.8xlarge" : { "Arch" : "HVM64"  },
      "cr1.8xlarge" : { "Arch" : "HVM64"  },
      "cc2.8xlarge" : { "Arch" : "HVM64"  }
    },
   "AWSRegionArch2AMI" : {
      "us-east-1"      : { "PV64" : "ami-50842d38", "HVM64" : "ami-08842d60", "HVMG2" : "ami-3a329952"  },
      "us-west-2"      : { "PV64" : "ami-af86c69f", "HVM64" : "ami-8786c6b7", "HVMG2" : "ami-47296a77"  },
      "us-west-1"      : { "PV64" : "ami-c7a8a182", "HVM64" : "ami-cfa8a18a", "HVMG2" : "ami-331b1376"  },
      "eu-west-1"      : { "PV64" : "ami-aa8f28dd", "HVM64" : "ami-f9dd458a", "HVMG2" : "ami-00913777"  },
      "ap-southeast-1" : { "PV64" : "ami-20e1c572", "HVM64" : "ami-d6e1c584", "HVMG2" : "ami-fabe9aa8"  },
      "ap-northeast-1" : { "PV64" : "ami-21072820", "HVM64" : "ami-35072834", "HVMG2" : "ami-5dd1ff5c"  },
      "ap-southeast-2" : { "PV64" : "ami-8b4724b1", "HVM64" : "ami-fd4724c7", "HVMG2" : "ami-e98ae9d3"  },
      "sa-east-1"      : { "PV64" : "ami-9d6cc680", "HVM64" : "ami-956cc688", "HVMG2" : "NOT_SUPPORTED" },
      "cn-north-1"     : { "PV64" : "ami-a857c591", "HVM64" : "ami-ac57c595", "HVMG2" : "NOT_SUPPORTED" },
      "eu-central-1"   : { "PV64" : "ami-a03503bd", "HVM64" : "ami-b43503a9", "HVMG2" : "ami-b03503ad"  }
    }
 },

 "Resources" : {
    "CFNInitUser" : {
      "Type" : "AWS::IAM::User",
      "Properties" : {
         "Policies": [{
            "PolicyName": "AccessForCFNInit",
            "PolicyDocument" : {
               "Statement": [{
                  "Effect" : "Allow",
                  "Action" : "cloudformation:DescribeStackResource",
                  "Resource" : "*"
                 }]
               }
             }]
          }
       },
    "CFNKeys" : {
       "Type" : "AWS::IAM::AccessKey",
       "Properties" : {
          "UserName" : { "Ref": "CFNInitUser" }
       }
    },
    "PuppetClientInstance" : {
       "Type" : "AWS::EC2::Instance",
       "Metadata" : {
          "AWS::CloudFormation::Init" : {
             "config" : {
               "packages" : {
                  "yum" : {
                    "puppet3" : [],
                    "ruby-devel" : [],
                    "gcc" : [],
                    "make" : [],
                    "rubygems" : []
                  },
                  "rubygems" : {
                    "json" : []
                   }
                },
                
                "files" : {
                   "/etc/yum.repos.d/epel.repo" : {
                     "source" : "https://s3.amazonaws.com/cloudformation-examples/enable-epel-on-amazon-linux-ami",
                     "mode" : "000644",
                     "owner" : "root",
                     "group" : "root"
                   },
                 
                  "/etc/puppet/puppet.conf" : {
                     "content" : { "Fn::Join" : ["", [
					   " [main]\n",
                       " logdir=/var/log/puppet\n",
                       " rundir=/var/run/puppet\n",
                       " ssldir=$vardir/ssl\n",
                       " pluginsync=true\n",
					   " server=",{ "Ref" : "PuppetMasterDNSName" },"\n",
					   " certname=",{ "Fn::Join" : [ "", [ { "Ref" : "AppName" }, "-01.", { "Ref" : "DNSZoneName" } ] ] },"\n", 
                       "[agent]\n",
                       " classfile=$vardir/classes.txt\n",
					   " environment=",{ "Ref" : "Environment" },"\n",
                       " localconfig=$vardir/localconfig\n"]] },
					   
                     "mode" : "000644",
                     "owner" : "root",
                     "group" : "root"
                    },
					
              "/etc/cfn/cfn-hup.conf" : {
                "content" : { "Fn::Join" : ["", [
                  "[main]\n",
                  "stack=", { "Ref" : "AWS::StackId" }, "\n",
                  "region=", { "Ref" : "AWS::Region" }, "\n"
                ]]},
                "mode"    : "000400",
                "owner"   : "root",
                "group"   : "root"
              },

              "/etc/cfn/hooks.d/cfn-auto-reloader.conf" : {
                "content": { "Fn::Join" : ["", [
                  "[cfn-auto-reloader-hook]\n",
                  "triggers=post.update\n",
                  "path=Resources.PuppetClientInstance.Metadata.AWS::CloudFormation::Init\n",
                  "action=/opt/aws/bin/cfn-init -s ", { "Ref" : "AWS::StackId" }, " -r PuppetClientInstance ",
                                                   " --region     ", { "Ref" : "AWS::Region" }, "\n",
                  "runas=root\n"
                ]]}
              }
                    
           },
		"services" : {
            "sysvinit" : {
                "puppet" : {
                    "enabled" : "true",
                    "ensureRunning" : "true",
				"cfn-hup" : { "enabled" : "true", "ensureRunning" : "true",
                    "files" : ["/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf"]}

                     }

                 }

           }
                

        }

     }
    },
    "Properties" : {
       "InstanceType" : { "Ref" : "InstanceType" },
	   "Tags" : [ {"Key" : "Name", "Value" : { "Fn::Join" : [ "", [ { "Ref" : "AppName" }, "-01.", { "Ref" : "DNSZoneName" } ] ] } }],
       "SecurityGroups" : [ {"Ref": "EC2SecurityGroupName"} ],
       "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                   { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
       "KeyName" : { "Ref" : "KeyName" },
       "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
           "#!/bin/bash\n",
		   "yum update\n",
		   "yum install -y aws-cfn-bootstrap\n",
		   "sed -i -e 's/localhost.localdomain/", { "Fn::Join" : [ "", [ { "Ref" : "AppName" }, "-01.", { "Ref" : "DNSZoneName" } ] ] }, "/' /etc/sysconfig/network\n",
		   "hostname ", { "Fn::Join" : [ "", [ { "Ref" : "AppName" }, "-01.", { "Ref" : "DNSZoneName" } ] ] }, "\n",
       "/opt/aws/bin/cfn-init --region ", { "Ref" : "AWS::Region" },
		   " -s ", { "Ref" : "AWS::StackName" }, " -r PuppetClientInstance ",
           " --access-key ", { "Ref" : "CFNKeys" },
           " --secret-key ", { "Fn::GetAtt" : ["CFNKeys", "SecretAccessKey"]}, "\n"]]}}
          }
    
     },
	 
	 "App1InstanceDNSRecord" : {
      "Type" : "AWS::Route53::RecordSet",
	  "DependsOn" : "PuppetClientInstance",
      "Properties" : {
        "HostedZoneName" : {
          "Fn::Join" : [ "", [
            { "Ref" : "DNSZoneName" }, "."
          ] ]
        },
        "Comment" : "DNS name for App1 server instance.",
        "Name" : { "Fn::Join" : [ "", [ { "Ref" : "AppName" }, "-01.", {"Ref" : "DNSZoneName"}, "." ] ] },
        "Type" : "CNAME",
        "TTL" : "60",
        "ResourceRecords" : [
          { "Fn::GetAtt" : [ "PuppetClientInstance", "PublicDnsName" ] }
        ]
      }
    }

 },

 "Outputs" : {
   "PuppetClientDNSName" : {
      "Value" : { "Fn::GetAtt" : [ "PuppetClientInstance", "PrivateDnsName" ] },
      "Description" : "DNS Name of PuppetClient"
     }
   }
}		  
